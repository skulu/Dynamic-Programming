# Return a boolean indicating if the targetsum can be generated by the numbers 
# in the array numbers. Assume all numbers in array are positive and you can 
# reuse the numbers as many times as you wish.

# let n = len(numbers) and m = targetsum
# O(n^m) in time and O(m) in space before memoisation


def cansum(targetsum, numbers, memo = {}):
    if targetsum == 0: return True
    if targetsum in memo: return True
    
    for num in numbers:
        if targetsum >= num:
            remainder = targetsum - num
            if cansum(remainder, numbers, memo) == True: 
                memo[remainder] = True
                return memo[remainder]
    
    return False


print(cansum(300,[7,14]))